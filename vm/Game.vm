function Game.new 0
push constant 11
call Memory.alloc 1
pop pointer 0
push constant 2
pop this 5
push constant 3
pop this 6
push constant 256
push constant 16
call Math.divide 2
pop this 4
push constant 4
pop this 7
push this 5
push this 6
push this 4
push this 7
call Car.new 4
pop this 0
push constant 1
pop this 1
push this 1
call Array.new 1
pop this 2
push pointer 0
call Game.FillOpponentCars 1
pop temp 0
push constant 2
pop this 3
push constant 150
pop this 8
push constant 25
pop this 9
push constant 0
pop this 10
push pointer 0
return
function Game.FillOpponentCars 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
push this 5
push this 6
push this 4
push this 7
call OpponentCar.new 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Game.run 2
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 0
call Car.Draw 1
pop temp 0
push pointer 0
call Game.MoveOpponentCars 1
pop temp 0
label WHILE_EXP0
push local 0
not
not
if-goto WHILE_END0
call Screen.clearScreen 0
pop temp 0
push pointer 0
call Game.DrawBorders 1
pop temp 0
push pointer 0
call Game.PrintScore 1
pop temp 0
call Keyboard.keyPressed 0
pop local 1
push local 1
push constant 81
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 0
label IF_FALSE0
push local 1
push constant 130
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
call Car.ChangeTrackLeft 1
pop temp 0
label IF_FALSE1
push local 1
push constant 132
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
push this 3
call Car.ChangeTrackRight 2
pop temp 0
label IF_FALSE2
push local 1
push constant 131
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
call Game.SpeedUp 1
pop temp 0
label IF_FALSE3
push local 1
push constant 133
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
call Game.SpeedDown 1
pop temp 0
label IF_FALSE4
push pointer 0
call Game.CheckCollision 1
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push pointer 0
call Game.DrawGameOver 1
pop temp 0
call Sys.halt 0
pop temp 0
push constant 0
return
label IF_FALSE5
push this 0
call Car.Draw 1
pop temp 0
push pointer 0
call Game.MoveOpponentCars 1
pop temp 0
push this 8
call Sys.wait 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
call Game.DrawExit 1
pop temp 0
call Sys.halt 0
pop temp 0
push constant 0
return
function Game.MoveOpponentCars 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 1
push local 1
call OpponentCar.TryMove 1
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Game.ScoreUp 1
pop temp 0
push local 1
call OpponentCar.dispose 1
pop temp 0
push local 0
push this 2
add
push this 5
push this 6
push this 4
push this 7
call OpponentCar.new 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push local 1
call OpponentCar.Draw 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Game.DrawBorders 2
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 512
push constant 2
call Math.divide 2
push this 5
push this 4
call Math.multiply 2
push this 3
push constant 2
call Math.divide 2
call Math.multiply 2
sub
push this 7
sub
pop local 0
push local 0
push constant 0
push local 0
push constant 255
call Screen.drawLine 4
pop temp 0
push constant 512
push constant 2
call Math.divide 2
push this 5
push this 4
call Math.multiply 2
push this 3
push constant 2
call Math.divide 2
call Math.multiply 2
add
pop local 1
push local 1
push constant 0
push local 1
push constant 255
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Game.CheckCollision 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push this 0
push local 0
push this 2
add
pop pointer 1
push that 0
call Car.CheckCollision 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Game.ScoreUp 0
push argument 0
pop pointer 0
push this 10
push constant 1
add
pop this 10
push constant 0
return
function Game.PrintScore 0
push argument 0
pop pointer 0
push constant 0
push constant 0
call Output.moveCursor 2
pop temp 0
push constant 7
call String.new 1
push constant 83
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 10
call Output.printInt 1
pop temp 0
push constant 0
return
function Game.SpeedUp 0
push argument 0
pop pointer 0
push this 8
push this 9
sub
push constant 25
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 8
push this 9
sub
pop this 8
label IF_FALSE0
push constant 0
return
function Game.SpeedDown 0
push argument 0
pop pointer 0
push this 8
push this 9
add
push constant 275
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 8
push this 9
add
pop this 8
label IF_FALSE0
push constant 0
return
function Game.DrawGameOver 0
push argument 0
pop pointer 0
push constant 0
return
function Game.DrawExit 0
push argument 0
pop pointer 0
push constant 0
return
function Game.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
