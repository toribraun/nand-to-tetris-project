class Drawer {
    field int ScreenHeight;
    field int ScreenWidth;
    field int blockSize;
    field int gap;

    constructor Drawer new()
    {
        let ScreenHeight = 256;
        let ScreenWidth = 512;
        let blockSize = 16;
        let gap = 4;
        return this;
    }

    method void DrawCar(Car car) {
        do Screen.setColor(true);
        do Screen.drawRectangle(car.GetX() * blockSize, car.GetY() * blockSize, (car.GetX() + car.GetWidth()) * blockSize - (blockSize / gap), (car.GetY() + car.GetHeight()) * blockSize - 1);
        return;
    }

    method void DrawOpponentCar(OpponentCar car) {
        var int currentHeight;
        var int currentY;
        let currentHeight = Math.min((car.GetY() + car.GetHeight()) * blockSize, ScreenHeight - 1);
        let currentY = Math.max(car.GetY() * blockSize, 0);
        if (((car.GetY() * blockSize) > (ScreenHeight - 1)) | (((car.GetY() * car.GetHeight()) * blockSize) < 0)) {
            return;
        }
        do Screen.setColor(true);
        do Screen.drawRectangle(car.GetX() * blockSize, currentY, (car.GetX() + car.GetWidth()) * blockSize - (blockSize / gap), currentHeight);
        return;
    }

    method void DrawBorders(int carWidth, int tracksCount) {
        var int leftBorderX, rightBorderX;
        do Screen.setColor(true);

        let leftBorderX = 512 / 2 - (carWidth * blockSize * (tracksCount / 2)) - gap;
        do Screen.drawLine(leftBorderX, 0, leftBorderX, 255);

        let rightBorderX = 512 / 2 + (carWidth * blockSize * (tracksCount / 2));
        do Screen.drawLine(rightBorderX, 0, rightBorderX, 255);
        return;
    }

    method void PrintScore(int score) {
        do Output.moveCursor(0, 0);
        do Output.printString("Score: ");
        do Output.printInt(score);
        return;
    }

    method void PrintSpeed(int speed) {
        do Output.moveCursor(2, 0);
        do Output.printString("Speed: ");
        do Output.printInt(speed);
        return;
    }

    method void DrawGameOver() {
        return;
    }

    method void DrawExit() {
        return;
    }

}